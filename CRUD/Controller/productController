const Product = require('../Models/Product');
const jwt = require('jsonwebtoken');
const User = require("../Models/User")

const addProduct = async (req,res)=>{
    try{
        const data = req.body;
        const product = new Product(data);
        await product.save();
        res.status(201).json(product);
    }catch(error){
        console.log("erreur");
        res.status(404).json({"message":"error"});
    }
}

const getProductById = async(req,res) =>{
    try{
        const id = req.params.id;
        const product = await Product.findById(id);
        if(product){
            return res.status(200).json({product});
        }else{
            return res.status(404);
        }
    }catch(error){
        console.log(error);
    }
}
const updateProductById = async(req,res) => {
    const {id} = req.params;
    const data = req.body;
    const product  = await Product.findByIdAndUpdate(id,data,{new: true});
    if(product){
        return res.status(201).send(product)
    }else{
        return res.status(401).send({"message" : "l' element n' est pas trouvé "});
    }
}
const deleteProductById = async (req,res)=>{
    const {id} = req.params;
    const product = await Product.findByIdAndDelete(id);
    if(product){
        return res.status(201).send(product)
    }else{
        return res.status(401).send({"message" : "l' element n' est pas trouvé "});
    }
} 
const insertManyProducts = async (req,res)=>{
    try{
        const data = req.body;
        const products = await Product.insertMany(data);
        res.status(200).send(products)
    }catch(error){
        res.status(400).send({"status": 404,"message" :"error"});
    }
}
const getAllProducts = async (req,res)=>{
    

    // const tokenHeader  = req.headers.authorization;
    // console.log("header token " + tokenHeader)
    // if(!tokenHeader){
    //     return res.status(403).json("message: 'Token is required'");

    // }

    // const token_list = tokenHeader.split(' ');
    // if(token_list[0]!== ('Bearer')){
    //     return res.status(403).json({"message" : "token should be Bearer"})
    // }
    // const token = token_list[1];
    // if(!token){
    //     return res.status(403).json({"message" :'Token is required'});
    
    // }
    // try{
    //     const decoded = jwt.verify(token,process.env.JWT_SECRET);
    //     console.log("Decoded",decoded)
    // }catch(error){
    //     console.log(error);
    //     return res.status(400).send({"message" : error})
    // }

    try{
        const products =  await Product.find();
        
        if(products){
            return res.status(200).send(products)
        }else{
           return  res.status(401).send({"status": 404,"message" :"error"});
        }
    }catch(error){
         res.status(400).send({"status": 404,"message" :error});
    }
}
const getAllProductsByUserId = async (req,res)=>{
    const user_id = req.query.id;
    if(!user_id){
        return res.status(400).send({"message" :"User id is requier in the query"})
    }
    try{
            const user = await User.findById(user_id);
            if(!user){
                return res.status(404).json({'message' : "your id is not found "});
            }
        }catch(error){
            return res.status(404).json({'message error' : "" + error});
        }

    // const tokenHeader  = req.headers.authorization;
    // console.log("header token " + tokenHeader)
    // if(!tokenHeader){
    //     return res.status(403).json("message: 'Token is required'");

    // }

    // const token_list = tokenHeader.split(' ');
    // if(token_list[0]!== ('Bearer')){
    //     return res.status(403).json({"message" : "token should be Bearer"})
    // }

    // const token = token_list[1];
    // if(!token){
    //     return res.status(403).json({"message" :'Token is required'});
    
    // }
    // try{
    //     const decoded = jwt.verify(token,process.env.JWT_SECRET);
    //     if(decoded.id !== user_id){
    //         return res.status(403).json({"message" : 'token is required'})
    //     }
    //     console.log("Decoded",decoded)
    // }catch(error){
    //     return res.status(405).send({"message" : error})
    // }

    try{
        const products =  await Product.find();
        
        if(products){
            return res.status(200).send(products)
        }else{
           return  res.status(401).send({"status": 404,"message" :"error"});
        }
    }catch(error){
         res.status(400).send({"status": 404,"message" :error});
    }
}
module.exports = { addProduct,getProductById,updateProductById,deleteProductById,insertManyProducts,getAllProducts,getAllProductsByUserId};